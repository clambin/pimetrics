stages:
  - test
  - release

# Don't run for new tags
workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

.test_only:
  only:
    changes:
      - "pimetrics/*.py"
      - "tests/*.py"
      - .gitlab-ci.yml

flake8:
  stage: test
  extends: .test_only
  image: python:3.7
  before_script:
    - pip install pipenv
    - pipenv install --dev
  script:
    - pipenv run flake8 --max-line-length 120 pimetric/*.py

pytest:
  stage: test
  extends: .test_only
  image: python:3.7
  before_script:
    - pip install pipenv
    - pipenv install --dev
  script:
    - cd tests && pipenv run pytest --cov
    - pipenv run bash <(curl -s https://codecov.io/bash) -s tests

sast:
  stage: test
  extends: .test_only
  image: python:3.7
  before_script:
    - pip install pipenv
    - pipenv install --dev
  script:
    - PIPENV_PYUP_API_KEY="" pipenv check
    - pipenv run bandit -r pimetrics/*.py

pypi:
  stage: release
  image: python:3.7
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  before_script:
    - pip install -U twine
    - echo "[pypi]" > ~/.pypirc
    - echo "    username = __token__" >> ~/.pypirc
    - echo "    password = ${TWINE_PASSWORD}" >> ~/.pypirc
    - export VERSION=$(grep -i ^version pimetrics/version.py | awk '{ print $3 }' | tr -d \');
  script:
    - python setup.py sdist
    - twine upload dist/pimetrics-${VERSION}.tar.gz

github:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  before_script:
    - export VERSION=$(grep -i ^version pimetrics/version.py | awk '{ print $3 }' | tr -d \');
    - git remote set-url origin "https://$GITHUB_USER:$GITHUB_TOKEN@github.com/$CI_PROJECT_PATH.git"
  script:
    - git tag $VERSION
    - git push --tags